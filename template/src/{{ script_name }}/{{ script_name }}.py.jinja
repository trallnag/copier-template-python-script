#!/usr/bin/env -S uv run -s

#
# This work is available under the ISC license.
#
# Copyright Tim Schwenke <tim@trallnag.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED “AS IS” AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# /// script
#
# requires-python = ">= 3.12"
#
# dependencies = [
#   "click == 8.1.8",
# ]
#
# ///
#

from typing import override

import click

VERSION = "0.1.0"

HELP = """
[...]

The program is available as the script "{{ script_name }}.py"
and as the package "{{ project_name }}" on PyPI.

[...]

The program itself is executed with "uv run", a subcommand of uv, which is a
package manager for Python. This is because the script contains inline script
metadata specifying required dependencies. The script also contains a shebang,
so it can be executed directly.

Using the package from PyPI, the equivalent command looks like this:

[...]
"""

EPILOG = """
\b
Project homepage: <https://github.com/trallnag/{{ project_name }}>.
"""


class Command(click.Command):
    """Custom command. Only used to customize the epilog formatting."""

    @override
    def format_epilog(self, ctx: click.Context, formatter: click.HelpFormatter) -> None:
        """Format the epilog. Just like the original, but without indentation."""

        if self.epilog:
            formatter.write_paragraph()
            formatter.write_text(self.epilog)


@click.command(
    cls=Command,
    context_settings={
        "help_option_names": ["-h", "--help"],
        "show_default": True,
    },
    help=HELP,
    epilog=EPILOG,
)
@click.version_option(VERSION)
def {{ script_name }}() -> None:
    """Command."""

    pass


if __name__ == "__main__":
    {{ script_name }}()
